5:05:41 PM: Netlify Build                                                 
5:05:41 PM: ────────────────────────────────────────────────────────────────
5:05:41 PM: ​
5:05:41 PM: ❯ Version
5:05:41 PM:   @netlify/build 34.0.0
5:05:41 PM: ​
5:05:41 PM: ❯ Flags
5:05:41 PM:   accountId: 643b74fda8389c6684e76bfe
5:05:41 PM:   baseRelDir: true
5:05:41 PM:   buildId: 686fa574b89e8f0008cf887c
5:05:41 PM:   deployId: 686fa574b89e8f0008cf887e
5:05:41 PM: ​
5:05:41 PM: ❯ Current directory
5:05:41 PM:   /opt/build/repo
5:05:41 PM: ​
5:05:41 PM: ❯ Config file
5:05:41 PM:   /opt/build/repo/netlify.toml
5:05:41 PM: ​
5:05:41 PM: ❯ Context
5:05:41 PM:   production
5:05:42 PM: ​
5:05:42 PM: build.command from netlify.toml                               
5:05:42 PM: ────────────────────────────────────────────────────────────────
5:05:42 PM: ​
5:05:42 PM: $ npm run build
5:05:43 PM: > rest-express@1.0.0 build
5:05:43 PM: > vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
5:05:43 PM: vite v5.4.19 building for production...
5:05:43 PM: transforming...
5:05:44 PM: Browserslist: browsers data (caniuse-lite) is 9 months old. Please run:
5:05:44 PM:   npx update-browserslist-db@latest
5:05:44 PM:   Why you should do it regularly: https://github.com/browserslist/update-db#readme
5:05:49 PM: ✓ 2913 modules transformed.
5:05:49 PM: rendering chunks...
5:05:49 PM: computing gzip size...
5:05:50 PM: ../dist/public/index.html                            0.63 kB │ gzip:   0.38 kB
5:05:50 PM: ../dist/public/assets/index-CK1qPlmS.css            63.64 kB │ gzip:  11.35 kB
5:05:50 PM: ../dist/public/assets/purify.es-BFmuJLeH.js         21.93 kB │ gzip:   8.62 kB
5:05:50 PM: ../dist/public/assets/index.es-B14No2IZ.js         150.53 kB │ gzip:  51.48 kB
5:05:50 PM: ../dist/public/assets/html2canvas.esm-CBrSDip1.js  201.42 kB │ gzip:  48.03 kB
5:05:50 PM: ../dist/public/assets/index-ktlP8sCH.js            854.19 kB │ gzip: 268.75 kB
5:05:50 PM: 
5:05:50 PM: (!) Some chunks are larger than 500 kB after minification. Consider:
5:05:50 PM: - Using dynamic import() to code-split the application
5:05:50 PM: - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
5:05:50 PM: - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
5:05:50 PM: ✓ built in 6.75s
5:05:50 PM:   dist/index.js  12.8kb
5:05:50 PM: ⚡ Done in 57ms
5:05:50 PM: ​
5:05:50 PM: (build.command completed in 7.3s)
5:05:50 PM: ​
5:05:50 PM: Functions bundling                                            
5:05:50 PM: ────────────────────────────────────────────────────────────────
5:05:50 PM: ​
5:05:50 PM: Packaging Functions from netlify/functions directory:
5:05:50 PM:  - api.js
5:05:50 PM: ​
5:05:50 PM: ▲ [WARNING] The CommonJS "module" variable is treated as a global variable in an ECMAScript module and may not work as expected [commonjs-variable-in-esm]
5:05:50 PM:     netlify/functions/api.js:16:0:
5:05:50 PM:       16 │ module.exports.handler = serverless(app);
5:05:50 PM:          ╵ ~~~~~~
5:05:50 PM:   This file is considered to be an ECMAScript module because the enclosing "package.json" file sets the type of this file to "module":
5:05:50 PM:     package.json:4:10:
5:05:50 PM:       4 │   "type": "module",
5:05:50 PM:         ╵           ~~~~~~~~
5:05:50 PM:   Node's package format requires that CommonJS files in a "type": "module" package use the ".cjs" file extension.
5:05:50 PM: ✘ [ERROR] Could not resolve "serverless-http"
5:05:50 PM:     netlify/functions/api.js:2:27:
5:05:50 PM:       2 │ const serverless = require('serverless-http');
5:05:50 PM:         ╵                            ~~~~~~~~~~~~~~~~~
5:05:50 PM:   You can mark the path "serverless-http" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle. You can also surround this "require" call with a try/catch block to handle this failure at run-time instead of bundle-time.
5:05:50 PM: ✘ [ERROR] Could not resolve "../../dist/server/index.js"
5:05:50 PM:     netlify/functions/api.js:3:35:
5:05:50 PM:       3 │ const { registerRoutes } = require('../../dist/server/index.js');
5:05:50 PM:         ╵                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
5:05:50 PM: ​
5:05:50 PM: Dependencies installation error                               
5:05:50 PM: ────────────────────────────────────────────────────────────────
5:05:50 PM: ​
5:05:50 PM:   Error message
5:05:50 PM:   A Netlify Function failed to require one of its dependencies.
5:05:50 PM:   Please make sure it is present in the site's top-level "package.json".
​
5:05:50 PM:   Build failed with 2 errors:
5:05:50 PM:   netlify/functions/api.js:2:27: ERROR: Could not resolve "serverless-http"
5:05:50 PM:   netlify/functions/api.js:3:35: ERROR: Could not resolve "../../dist/server/index.js"
5:05:50 PM: ​
5:05:50 PM:   Resolved config
5:05:50 PM:   build:
5:05:50 PM:     command: npm run build
5:05:50 PM:     commandOrigin: config
5:05:50 PM:     environment:
5:05:50 PM:       - NODE_VERSION
5:05:50 PM:     publish: /opt/build/repo/dist/public
5:05:50 PM:     publishOrigin: config
5:05:50 PM:   functions:
5:05:50 PM:     "*":
5:05:50 PM:       node_bundler: esbuild
5:05:50 PM:   functionsDirectory: /opt/build/repo/netlify/functions
5:05:50 PM:   plugins:
5:05:50 PM:     - inputs: {}
5:05:50 PM:       origin: config
5:05:50 PM:       package: "@netlify/plugin-functions-install-core"
5:05:50 PM:   redirects:
5:05:50 PM:     - from: /api/*
      status: 200
      to: /.netlify/functions/api/:splat
    - from: /*
      status: 200
      to: /index.html
  redirectsOrigin: config
5:05:50 PM: Build failed due to a user error: Build script returned non-zero exit code: 2
5:05:51 PM: Failed during stage 'building site': Build script returned non-zero exit code: 2
5:05:51 PM: Failing build: Failed to build site
5:05:51 PM: Finished processing build request in 33.884s